<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H//Z
</value>
  </data>
</root>